Creating app automatically
npx create-next-app@latest --experimental-app
-------------------------------
Project file review(only something new to me)
- pages - area for our routes
- app - directory for basic pages
--------------------------------
We can create new route by adding dir into our app
Inside our route we can create layout.tsx, where we importing our styles and returning pages
Create page.tsx with unique content, place there metadata
Create styles.module.tsx for styling
Create error.tsx
Create loading.tsx for loading message or animation
----------------------------------
IMPORTANT CHANGES !
Head is now deprecated. Now we export metadata with Metadata type object
----------------------------------
Fetching data
This works as SERVER COMPONENT
We can fetch data in parallel
If we see ts error when trying to use async component we can type:
{/* @ts-expect-error Async Server Component */} // In future this problem must be resolved
----------------------------------
SSG - Static Site Generation 
SSR - Server Side Rendering
ISR - Incremental Static Regeneration

Cache setting for fetch requests:
Default:
const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`, { cache: 'force-cache'})

If we dont want to cache data"
const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`, { cache: 'no-store'})

Implement ISR strategy:
const res = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`, { next: { revalidate: 60 }})
ALSO WE CAN IMPLEMENT IT ON page.tsx or layout.tsx levels
export const revalidate = 60
